	How did viewing a diff between two versions of a file help you see the bug that
was introduced?
Most of the content in the file are similar, so carefully looking at the file
helped me to see the difference.


	How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
The history of a program will tell me how the program has grown, it will also
make it easier to revert bugs that might occur.


	What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
~ Git makes you save logical files that can compile but the others will make you
save files that won't probably compile
~Git makes you to choose a name for the commit making it easier for you to know
how different that commit is from the different ones


	Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
NO. Git makes you save files in different commits


	How can you use the commands git log and git diff to view the history of files?
Git log helps you to view the commits in the repository and git diff helps you to
compare 2 different commits for the difference between them


	How might using version control make you more confident to make changes that
could break something?
Version control will make you very sure of where the bug was introduced, and you
can use git diff to compare and see which changes were made, and what is more
interesting?... all of these can be done with your latest commit intact, 
giving you the cofidence that you can always return to the latest version of
your code


	Now that you have your workspace set up, what do you want to try using Git for?
All my projects